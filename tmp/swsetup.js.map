{"version":3,"sources":["../client/js/swsetup.js"],"names":[],"mappings":"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","file":"swsetup.js","sourcesContent":["// TODO: make sure this all works in browsers without SW support. Checks are half baked today.\nvar models = require('./models.js');\nvar network = require('./network.js');\n\nvar browserSupportsSWAndNotifications = function () {\n  return ('serviceWorker' in navigator && typeof Notification !== 'undefined');\n}\n\nvar hasPushNotificationPermission = function(success, failure) {\n  if (!browserSupportsSWAndNotifications()) {\n    failure();\n    return;\n  }\n  var status = Notification.permission;\n  if (status !== 'granted') {\n    failure();\n  } else {\n    success();\n  }\n};\n\nvar requestPushNotificationPermission = function (success, failure) {\n  console.log('Requesting push permission');\n  Notification.requestPermission(function (decision) {\n    if (decision == 'granted') {\n      success();\n    } else {\n      failure();\n    }\n  });\n};\n\nvar requestPushNotificationPermissionAndSubscribe = function (success, failure) {\n  requestPushNotificationPermission(function(){\n    subscribeForPushNotifications(sendSubscriptionToServer);\n    success();\n  }, function () {\n    // TODO: Handle failure\n    failure();\n  });\n}\n\nvar sendSubscriptionToServer = function (subscription) {\n  // Reconstructing this object to avoid https://code.google.com/p/chromium/issues/detail?id=467366 (still neccessary as of Chrome 45)\n  var subscription = {endpoint: subscription.endpoint};\n  // Parse the GCM subscriptionId out of end endpoint as that is what GCM needs\n  subscription.subscriptionId = subscription.endpoint.slice(subscription.endpoint.indexOf('send/')+5, subscription.endpoint.length);\n  network.requestCreatePushNotificationsSubscription(models.user, subscription);\n};\n\nvar subscribeForPushNotifications = function (callback) {\n  navigator.serviceWorker.ready.then(function(registration) {\n    console.log('Registering for push');\n    registration.pushManager.subscribe({userVisibleOnly: true})\n      .then(function(pushSubscription) {\n        console.log('Subscription succeeded', pushSubscription);\n        callback(pushSubscription);\n      }, function (e) {\n        console.log('registering for push failed', e);\n      });\n  });\n};\n\nvar unsubscribe = function (subscription, callback) {\n  subscription.unsubscribe().then(function(){\n    console.log('Unsubscribed');\n    callback();\n  }, function () {\n    console.log('Unregistration failed');\n  });\n};\n\nvar sendMessageToSW = function (message, callback) {\n  var messageChannel = new MessageChannel();\n  messageChannel.port1.onmessage = function(event) {\n    callback(event.data);\n  };\n  if (navigator.serviceWorker.controller) {\n    navigator.serviceWorker.controller.postMessage(message, [messageChannel.port2]);\n    console.log('Sent message to service worker: ',message);\n  } else {\n    throw Error('No service worker exists, can\\'t send a message');\n  }\n};\n\nvar _unsubscribeAndResubscribe = function () {\n  navigator.serviceWorker.ready.then(function(registration){\n    registration.pushManager.getSubscription().then(function(pushSubscription){\n      if (pushSubscription) {\n        unsubscribe(pushSubscription, function(){subscribeForPushNotifications(sendSubscriptionToServer);});\n      } else {\n        console.log('no subscription to unsubscribe');\n        subscribeForPushNotifications(sendSubscriptionToServer);\n      }\n    });\n  });\n}\n\nvar init = function () {\n  if (browserSupportsSWAndNotifications()) {\n    navigator.serviceWorker.register('./sw.js').then(function(registration) {\n      // Registration was successful\n      console.log('ServiceWorker registration successful with scope: ', registration.scope);\n    });\n    // Ensure the SW always knows who the user is and what their sessionToken is!\n    // TODO: Handle logout here where we have no userid or session token\n    // Note these will fire whenever either changes, so if both change this will fire twice\n    var userChanged = function() {\n      var userId = models.user.getUserId();\n      var sessionToken = models.user.getSessionToken();\n      navigator.serviceWorker.ready.then(function(registration) {\n        hasPushNotificationPermission(function () {\n          if (userId !== undefined && sessionToken !== undefined) {\n            registration.pushManager.getSubscription().then(function(pushSubscription) {\n              if (!pushSubscription) {\n                console.log('ruh roh, we lost our push subscription (or we never managed to make one - were you offline?). Better make a new one...');\n                subscribeForPushNotifications(sendSubscriptionToServer);\n              }\n            });\n          }\n        }, function () {\n          // If we don't have permission for push messages make sure we've cleared subscriptions (Chrome has a bug where it doesn't do this)\n          registration.pushManager.getSubscription().then(function(pushSubscription) {\n            if (pushSubscription) { unsubscribe(pushSubscription); }\n          });\n        });\n      });\n    };\n    userChanged();\n    models.user.addListener(userChanged);\n  }\n}\n\ninit();\n\nmodule.exports = {\n  browserSupportsSWAndNotifications: browserSupportsSWAndNotifications,\n  hasPushNotificationPermission: hasPushNotificationPermission,\n  requestPushNotificationPermissionAndSubscribe: requestPushNotificationPermissionAndSubscribe,\n  _unsubscribeAndResubscribe: _unsubscribeAndResubscribe\n}\n"]}