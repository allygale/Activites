{"version":3,"sources":["tapalong/tapalong_app/client/src/swsetup.js"],"names":[],"mappings":"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","file":"tapalong/tapalong_app/client/src/swsetup.js","sourcesContent":["// TODO: make sure this all works in browsers without SW support. Checks are half baked today.\nvar swLibrary = (function() {\n  var browserSupportsSWAndNotifications = false;\n  if ('serviceWorker' in navigator && typeof Notification !== 'undefined') {\n    browserSupportsSWAndNotifications = true\n  }\n\n  var hasPushNotificationPermission = function(success, failure) {\n    if (!browserSupportsSWAndNotifications) {\n      failure();\n      return;\n    }\n    var status = Notification.permission;\n    if (status !== 'granted') {\n      failure();\n    } else {\n      success();\n    }\n  };\n\n  // Calls success with either 'granted' or 'denied'\n  var requestPushNotificationPermission = function (success) {\n    console.log('Requesting push permission');\n    Notification.requestPermission(success);\n  };\n\n  var requestPushNotificationPermissionAndSubscribe = function (success) {\n    requestPushNotificationPermission(function(decision){\n      if (decision == 'granted') {\n        subscribeForPushNotifications(sendSubscriptionToServer);\n      }\n      success(decision);\n    });\n  }\n\n  var sendSubscriptionToServer = function (subscriptionObj) {\n    // Recreate the object due to https://code.google.com/p/chromium/issues/detail?id=467366\n    var subscription = {subscriptionId: subscriptionObj.subscriptionId, endpoint: subscriptionObj.endpoint};\n    network.requestCreatePushNotificationsSubscription(subscription);\n  };\n\n  var subscribeForPushNotifications = function (callback) {\n    navigator.serviceWorker.ready.then(function(registration) {\n      console.log('Registering for push');\n      registration.pushManager.subscribe({userVisibleOnly: true})\n        .then(function(pushSubscription) {\n          console.log('Subscription succeeded', pushSubscription);\n          callback(pushSubscription);\n        }, function (e) {\n          console.log('registering for push failed', e);\n        });\n    });\n  };\n\n  var unsubscribe = function (subscription, callback) {\n    subscription.unsubscribe().then(function(){\n      console.log('Unsubscribed');\n      callback();\n    }, function () {\n      console.log('Unregistration failed');\n    });\n  };\n\n  var sendMessageToSW = function (message, callback) {\n    var messageChannel = new MessageChannel();\n    messageChannel.port1.onmessage = function(event) {\n      callback(event.data);\n    };\n    if (navigator.serviceWorker.controller) {\n      navigator.serviceWorker.controller.postMessage(message, [messageChannel.port2]);\n      console.log('Sent message to service worker: ',message);\n    } else {\n      throw Error('No service worker exists, can\\'t send a message');\n    }\n  };\n\n  var _unsubscribeAndResubscribe = function () {\n    navigator.serviceWorker.ready.then(function(registration){\n      registration.pushManager.getSubscription().then(function(pushSubscription){\n        if (pushSubscription) {\n          unsubscribe(pushSubscription, function(){subscribeForPushNotifications(sendSubscriptionToServer);});\n        } else {\n          console.log('no subscription to unsubscribe');\n          subscribeForPushNotifications(sendSubscriptionToServer);\n        }\n      });\n    });\n  }\n\n  var init = function () {\n    if (browserSupportsSWAndNotifications) {\n      navigator.serviceWorker.register('./sw.js').then(function(registration) {\n        // Registration was successful\n        console.log('ServiceWorker registration successful with scope: ', registration.scope);\n      });\n    }\n\n    // Ensure the SW always knows who the user is and what their sessionToken is!\n    // TODO: Handle logout here where we have no userid or session token\n    // Note these will fire whenever either changes, so if both change this will fire twice\n    var userChanged = function() {\n      var userId = models.user.getUserId();\n      var sessionToken = models.user.getSessionToken();\n      navigator.serviceWorker.ready.then(function(registration) {\n        hasPushNotificationPermission(function () {\n          if (userId !== undefined && sessionToken !== undefined) {\n            registration.pushManager.getSubscription().then(function(pushSubscription) {\n              if (!pushSubscription) {\n                console.log('ruh roh, we lost our push subscription (or we never managed to make one - were you offline?). Better make a new one...');\n                subscribeForPushNotifications(sendSubscriptionToServer);\n              }\n            });\n          }\n        }, function () {\n          // If we don't have permission for push messages make sure we've cleared subscriptions (Chrome has a bug where it doesn't do this)\n          registration.pushManager.getSubscription().then(function(pushSubscription) {\n            if (pushSubscription) { unsubscribe(pushSubscription); }\n          });\n        });\n      });\n    };\n    userChanged();\n    models.user.addListener(userChanged);\n  }\n\n  init();\n\n  return {\n    hasPushNotificationPermission: hasPushNotificationPermission,\n    requestPushNotificationPermissionAndSubscribe: requestPushNotificationPermissionAndSubscribe,\n    _unsubscribeAndResubscribe: _unsubscribeAndResubscribe\n  }\n})();\n"]}